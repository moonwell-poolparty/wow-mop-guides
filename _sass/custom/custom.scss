.side-bar {
    z-index: 0;
    display: flex;
    flex-wrap: wrap;
    background-color: $sidebar-color;
    
    @include mq(md) {
      flex-flow: column nowrap;
      position: fixed;
      top: 0;
      left: 0; // Explicitly position at left edge
      width: $nav-width-md;
      height: 100vh; // Use full viewport height
      border-right: $border $border-color;
      align-items: flex-start; // Changed from flex-end to align left
    }
    
    @include mq(lg) {
      width: $nav-width; // Use consistent nav width instead of complex calculation
      min-width: $nav-width;
    }
    
    & + .main {
      @include mq(md) {
        margin-left: $nav-width-md;
        width: calc(100% - #{$nav-width-md}); // Fill remaining space
      }
      
      @include mq(lg) {
        margin-left: $nav-width; // Simplified margin
        width: calc(100% - #{$nav-width}); // Fill remaining space
      }
      
      .main-header {
        display: none;
        background-color: $sidebar-color;
        
        @include mq(md) {
          display: flex;
          background-color: $body-background-color;
        }
        
        &.nav-open {
          display: block;
          
          @include mq(md) {
            display: flex;
          }
        }
      }
    }
  }

  .content-with-image {
    display: flex;
    gap: 2rem;
    align-items: flex-start; // This makes the image stick to the top
    
    @media (max-width: 768px) {
      flex-direction: column;
      gap: 1rem;
    }
    
    .markdown-content {
      flex: 1;
      min-width: 0; // Prevents flex item from overflowing
      
      // Target both the class on blockquotes and paragraphs that contain blockquotes
      .everyone,
      .everyone > blockquote,
      blockquote.everyone {
        border-left: 4px solid #6c757d;
        background-color: var(--everyone-bg, #f8f9fa);
      }
      
      .raidlead,
      .raidlead > blockquote,
      blockquote.raidlead {
        border-left: 4px solid #ffc107;
        background-color: var(--raidlead-bg, #fff3cd);
      }
      
      .tank,
      .tank > blockquote,
      blockquote.tank {
        border-left: 4px solid #0d6efd;
        background-color: var(--tank-bg, #cfe2ff);
      }
      
      .healer,
      .healer > blockquote,
      blockquote.healer {
        border-left: 4px solid #198754;
        background-color: var(--healer-bg, #d1e7dd);
      }
      
      .ranged,
      .ranged > blockquote,
      blockquote.ranged {
        border-left: 4px solid #dc3545;
        background-color: var(--ranged-bg, #f8d7da);
      }
      
      .melee,
      .melee > blockquote,
      blockquote.melee {
        border-left: 4px solid #6f42c1;
        background-color: var(--melee-bg, #e2d9f3);
      }
      
      blockquote {
        margin: 0.5rem 0;
        padding: 0.75rem 1rem;
        border-radius: 4px;
        
        ul, ol {
          margin: 0;
          padding-left: 1rem;
        }
      }
    }
    
    .side-image {
      flex: 0 0 300px; // Fixed width, doesn't grow or shrink
      
      @media (max-width: 1024px) {
        flex: 0 0 250px; // Smaller on medium screens
      }
      
      @media (max-width: 768px) {
        flex: none; // Full width on mobile
        text-align: center;
      }
      
      img {
        width: 100%;
        height: auto;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        
        // Sticky positioning to keep it at the top while scrolling
        position: sticky;
        top: 20px;
        
        @media (max-width: 768px) {
          position: static; // Remove sticky on mobile
          max-width: 400px;
        }
      }
    }
  }

.main-content h3, .main-content h4 {
  margin-top: 2rem;
  padding-top: 0.3rem;
}

.main-content ul {
  line-height: 1.6;
}

.ability {
  background: #fbeaea;
  padding: 0.15em 0.35em;
  border-radius: 4px;
  font-weight: 600;
  color: #b30000;
  white-space: nowrap;
}

/* --- Tables --- */
table {
  border-collapse: collapse;
  width: 100%;
  font-size: 0.95rem;
}

table thead {
  background: #222;
  color: #fff;
}

table th, table td {
  padding: 0.6em 0.8em;
  vertical-align: top;
}

table tbody tr:nth-child(odd) {
  background: #fafafa;
}

table tbody tr:hover {
  background: #f0f8ff;
}

table td:first-child {
  font-weight: 600;
  white-space: nowrap;
}

table td:nth-child(2) {
  text-align: center;
  font-weight: 500;
  color: #333;
}

/* --- Phase separation bars --- */
h4[id*="phase-1"] {
  border-top: 3px solid #ff9900;
  padding-top: 0.5em;
}

h4[id*="phase-2"] {
  border-top: 3px solid #cc0000;
  padding-top: 0.5em;
}

/* --- Role blockquotes: add icons --- */
blockquote.raidlead::before {
  content: "üß† Raidlead";
  font-weight: bold;
}
blockquote.tank::before {
  content: "üõ°Ô∏è Tank";
  font-weight: bold;
}
blockquote.healer::before {
  content: "‚ù§Ô∏è Healer";
  font-weight: bold;
}
blockquote.ranged::before {
  content: "üéØ Ranged";
  font-weight: bold;
}
blockquote.melee::before {
  content: "‚öîÔ∏è Melee";
  font-weight: bold;
}
blockquote.everyone::before {
  content: "üë• Everyone";
  font-weight: bold;
}

/* --- Content with image --- */
.content-with-image {
  display: flex;
  gap: 1.5rem;
  align-items: flex-start;
  margin: 1.5rem 0;
}

.content-with-image .side-image img {
  max-width: 300px;
  border: 2px solid #ddd;
  border-radius: 6px;
  cursor: pointer;
  transition: 0.3s;
}

.content-with-image .side-image img:hover {
  transform: scale(1.02);
}

/* Mobile: stack vertically */
@media (max-width: 768px) {
  .content-with-image {
    flex-direction: column;
  }
  .content-with-image .side-image img {
    max-width: 100%;
  }
}

.image-overlay {
  display: none;
  justify-content: center;
  align-items: center;
  position: fixed;
  inset: 0;
  background: rgba(0,0,0,0.8);
  z-index: 1000;
}

.slider-wrapper {
  width: 80%;           /* adjust as needed */
  max-width: 800px;     /* optional */
  overflow: hidden;
}

.slider-track {
  display: flex;
  transition: transform 0.5s ease;
}

.slider-track img {
  flex-shrink: 0;
  width: 100%;
  cursor: pointer;
}

.image-overlay .prev,
.image-overlay .next,
.image-overlay .close {
  position: absolute;
  color: white;
  font-size: 2rem;
  top: 50%;
  transform: translateY(-50%);
  cursor: pointer;
  user-select: none;
}

.overlay-title {
  position: absolute;
  bottom: 10px;
  left: 50%;
  transform: translateX(-50%);
  color: white;
  font-size: 1.2rem;
  text-align: center;
  background: rgba(0,0,0,0.5);
  padding: 0.3rem 0.6rem;
  border-radius: 4px;
  max-width: 90%;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.image-overlay .prev { left: 10px; }
.image-overlay .next { right: 10px; }
.image-overlay .close { top: 10px; right: 20px; transform: none; }

/* Example: text color for "everyone" callout title (generated via ::before) */
blockquote::before {
  color: #1e1e2f !important; /* or use your $variable */
  font-weight: 600;          /* make it stand out */
}

blockquote.tank,
blockquote.healer,
blockquote.raidlead,
blockquote.everyone,
blockquote.melee,
blockquote.ranged {
  color: #0b2239; /* or your preferred color per callout */
}